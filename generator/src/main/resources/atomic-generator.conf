akka.http.host-connection-pool {
  max-connections = 100 // max simultaneous connections to all the nodes from the generator
  response-entity-subscription-timeout = 100.seconds // to avoid Akka bug, can be increased until OutOfMemoryError
}

atomic-generator {
  logging-level = DEBUG
  waves-crypto = yes
  chain-id = T
  atomic-delay = 100ms
  parallelism = 10
  utx-limit = 1000
  max-wait-for-tx-leave-utx = 5 minutes
  contract {
    version = 1
    image = "localhost:5000/smart-kv"
    image-hash = "b48d1de58c39d2160a4b8a5a9cae90818da1212742ec1f11fba1209bed0a212c"
    create-params: [
      {
        type = string
        key = data
        value = "some string"
      },
      {
        type = integer
        key = length
        value = 10
      }
    ]
    call-params: [
      {
        type = string
        key = data
        value = "Input string size 500: BBBBBBBBBBBBBBBBBBBBBBBBBBBB"
      }
    ]
  }
  policy {
    lifespan = 50 // create new policy every 50'th transaction
    data-txs-count = 3 // PDH transactions count for a single atomic
    data-size = 100KB // data size for each PDH transaction
  }
  nodes: [
    {
      api-url = "https://localhost/node-0/",
      privacy-api-key = "qwerty",
      address = "3JaaKM2QhpKqF73b4bvGdwPNiKCSi53gEwk",
      password = "somepass"
    },
    {
      api-url = "https://localhost/node-2/",
      privacy-api-key = "qwerty",
      address = "3N2cQFfUDzG2iujBrFTnD2TAsCNohDxYu8w"
    }
  ]
}